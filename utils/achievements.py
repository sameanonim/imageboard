from datetime import datetime
import json

ACHIEVEMENTS = {
    'first_post': {
        'id': 'first_post',
        'title': '–ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç!',
        'description': '–°–æ–∑–¥–∞–ª —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç',
        'icon': 'üìù'
    },
    'thread_master': {
        'id': 'thread_master',
        'title': '–ú–∞—Å—Ç–µ—Ä —Ç—Ä–µ–¥–æ–≤',
        'description': '–°–æ–∑–¥–∞–ª 5 —Ç—Ä–µ–¥–æ–≤',
        'icon': 'üßµ',
        'required_count': 5
    },
    'night_owl': {
        'id': 'night_owl',
        'title': '–ù–æ—á–Ω–∞—è —Å–æ–≤–∞',
        'description': '–ù–∞–ø–∏—Å–∞–ª –ø–æ—Å—Ç –≤ 3 —á–∞—Å–∞ –Ω–æ—á–∏',
        'icon': 'ü¶â'
    },
    'early_bird': {
        'id': 'early_bird',
        'title': '–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞',
        'description': '–ù–∞–ø–∏—Å–∞–ª –ø–æ—Å—Ç –≤ 6 —É—Ç—Ä–∞',
        'icon': 'üê¶'
    },
    'weekend_warrior': {
        'id': 'weekend_warrior',
        'title': '–í–æ–∏–Ω –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è',
        'description': '–ù–∞–ø–∏—Å–∞–ª –ø–æ—Å—Ç –≤ —Å—É–±–±–æ—Ç—É –∏–ª–∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ',
        'icon': '‚öîÔ∏è'
    },
    'file_hoarder': {
        'id': 'file_hoarder',
        'title': '–°–æ–±–∏—Ä–∞—Ç–µ–ª—å —Ñ–∞–π–ª–æ–≤',
        'description': '–ó–∞–≥—Ä—É–∑–∏–ª 10 —Ñ–∞–π–ª–æ–≤',
        'icon': 'üìÅ',
        'required_count': 10
    },
    'gif_master': {
        'id': 'gif_master',
        'title': '–ú–∞—Å—Ç–µ—Ä GIF',
        'description': '–ó–∞–≥—Ä—É–∑–∏–ª 5 GIF-–∞–Ω–∏–º–∞—Ü–∏–π',
        'icon': 'üé¨',
        'required_count': 5
    },
    'quick_replier': {
        'id': 'quick_replier',
        'title': '–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç—á–∏–∫',
        'description': '–û—Ç–≤–µ—Ç–∏–ª –Ω–∞ –ø–æ—Å—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç—ã',
        'icon': '‚ö°'
    },
    'thread_reviver': {
        'id': 'thread_reviver',
        'title': '–û–∂–∏–≤–∏—Ç–µ–ª—å —Ç—Ä–µ–¥–æ–≤',
        'description': '–û—Ç–≤–µ—Ç–∏–ª –≤ —Ç—Ä–µ–¥–µ —Å—Ç–∞—Ä—à–µ –Ω–µ–¥–µ–ª–∏',
        'icon': 'üíâ'
    },
    'lurker': {
        'id': 'lurker',
        'title': '–õ—É—Ä–∫–µ—Ä',
        'description': '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–ª 100 —Ç—Ä–µ–¥–æ–≤',
        'icon': 'üëÄ',
        'required_count': 100
    }
}

def check_achievements(request, post_data=None):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        request: –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ Flask
        post_data: –î–∞–Ω–Ω—ã–µ –æ –ø–æ—Å—Ç–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    
    Returns:
        list: –°–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–∑ –∫—É–∫–∏
    current_achievements = json.loads(
        request.cookies.get('achievements', '[]')
    )
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –∫—É–∫–∏
    stats = json.loads(
        request.cookies.get('user_stats', '{}')
    )
    
    new_achievements = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ—Å—Ç–∞–º–∏
    if post_data:
        # –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç
        if 'first_post' not in current_achievements:
            new_achievements.append(ACHIEVEMENTS['first_post'])
        
        # –ù–æ—á–Ω–∞—è —Å–æ–≤–∞
        if datetime.now().hour == 3 and 'night_owl' not in current_achievements:
            new_achievements.append(ACHIEVEMENTS['night_owl'])
        
        # –†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞
        if datetime.now().hour == 6 and 'early_bird' not in current_achievements:
            new_achievements.append(ACHIEVEMENTS['early_bird'])
        
        # –í–æ–∏–Ω –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è
        if datetime.now().weekday() >= 5 and 'weekend_warrior' not in current_achievements:
            new_achievements.append(ACHIEVEMENTS['weekend_warrior'])
        
        # –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç—á–∏–∫
        if post_data.get('is_reply') and post_data.get('reply_time', 0) < 60:
            if 'quick_replier' not in current_achievements:
                new_achievements.append(ACHIEVEMENTS['quick_replier'])
        
        # –û–∂–∏–≤–∏—Ç–µ–ª—å —Ç—Ä–µ–¥–æ–≤
        if post_data.get('thread_age', 0) > 7 and 'thread_reviver' not in current_achievements:
            new_achievements.append(ACHIEVEMENTS['thread_reviver'])
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats['posts'] = stats.get('posts', 0) + 1
    stats['threads'] = stats.get('threads', 0) + (1 if post_data and post_data.get('is_op') else 0)
    stats['files'] = stats.get('files', 0) + post_data.get('file_count', 0) if post_data else 0
    stats['gifs'] = stats.get('gifs', 0) + post_data.get('gif_count', 0) if post_data else 0
    stats['views'] = stats.get('views', 0) + 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
    if stats['threads'] >= 5 and 'thread_master' not in current_achievements:
        new_achievements.append(ACHIEVEMENTS['thread_master'])
    
    if stats['files'] >= 10 and 'file_hoarder' not in current_achievements:
        new_achievements.append(ACHIEVEMENTS['file_hoarder'])
    
    if stats['gifs'] >= 5 and 'gif_master' not in current_achievements:
        new_achievements.append(ACHIEVEMENTS['gif_master'])
    
    if stats['views'] >= 100 and 'lurker' not in current_achievements:
        new_achievements.append(ACHIEVEMENTS['lurker'])
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    current_achievements.extend([a['id'] for a in new_achievements])
    
    return {
        'new_achievements': new_achievements,
        'current_achievements': current_achievements,
        'stats': stats
    } 